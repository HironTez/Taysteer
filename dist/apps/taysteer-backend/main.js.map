{"version":3,"file":"main.js","mappings":"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","sources":["webpack://taysteer/./apps/taysteer-backend/src/app.module.ts","webpack://taysteer/./apps/taysteer-backend/src/auth/auth.controller.ts","webpack://taysteer/./apps/taysteer-backend/src/auth/auth.module.ts","webpack://taysteer/./apps/taysteer-backend/src/auth/auth.service.ts","webpack://taysteer/./apps/taysteer-backend/src/auth/guards/cookie-auth.guard.ts","webpack://taysteer/./apps/taysteer-backend/src/auth/guards/local-auth.guard.ts","webpack://taysteer/./apps/taysteer-backend/src/auth/serializers/local.serializer.ts","webpack://taysteer/./apps/taysteer-backend/src/auth/serializers/passport.serializer.ts","webpack://taysteer/./apps/taysteer-backend/src/auth/strategies/local.strategy.ts","webpack://taysteer/./apps/taysteer-backend/src/middleware/http-exception.filter.ts","webpack://taysteer/./apps/taysteer-backend/src/middleware/req.log.middleware.ts","webpack://taysteer/./apps/taysteer-backend/src/ormconfig.ts","webpack://taysteer/./apps/taysteer-backend/src/resources/recipes/recipe.comment.model.ts","webpack://taysteer/./apps/taysteer-backend/src/resources/recipes/recipe.controller.ts","webpack://taysteer/./apps/taysteer-backend/src/resources/recipes/recipe.dtos.ts","webpack://taysteer/./apps/taysteer-backend/src/resources/recipes/recipe.model.ts","webpack://taysteer/./apps/taysteer-backend/src/resources/recipes/recipe.module.ts","webpack://taysteer/./apps/taysteer-backend/src/resources/recipes/recipe.rating.model.ts","webpack://taysteer/./apps/taysteer-backend/src/resources/recipes/recipe.service.ts","webpack://taysteer/./apps/taysteer-backend/src/resources/recipes/recipe.service.types.ts","webpack://taysteer/./apps/taysteer-backend/src/resources/users/user.controller.ts","webpack://taysteer/./apps/taysteer-backend/src/resources/users/user.dto.ts","webpack://taysteer/./apps/taysteer-backend/src/resources/users/user.model.ts","webpack://taysteer/./apps/taysteer-backend/src/resources/users/user.module.ts","webpack://taysteer/./apps/taysteer-backend/src/resources/users/user.service.ts","webpack://taysteer/./apps/taysteer-backend/src/resources/users/user.service.types.ts","webpack://taysteer/./apps/taysteer-backend/src/typification/interfaces.ts","webpack://taysteer/./apps/taysteer-backend/src/utils/current.time.ts","webpack://taysteer/./apps/taysteer-backend/src/utils/image.uploader.ts","webpack://taysteer/./apps/taysteer-backend/src/utils/logger.ts","webpack://taysteer/./apps/taysteer-backend/src/utils/promise.controller.ts","webpack://taysteer/./apps/taysteer-backend/src/utils/promise.loader.ts","webpack://taysteer/./configs/common/config.ts","webpack://taysteer/./configs/utils/cloudinary.ts","webpack://taysteer/external commonjs \"@nestjs/common\"","webpack://taysteer/external commonjs \"@nestjs/core\"","webpack://taysteer/external commonjs \"@nestjs/passport\"","webpack://taysteer/external commonjs \"@nestjs/platform-fastify\"","webpack://taysteer/external commonjs \"@nestjs/swagger\"","webpack://taysteer/external commonjs \"@nestjs/typeorm\"","webpack://taysteer/external commonjs \"bcryptjs\"","webpack://taysteer/external commonjs \"cloudinary\"","webpack://taysteer/external commonjs \"express\"","webpack://taysteer/external commonjs \"fastify\"","webpack://taysteer/external commonjs \"fastify-multipart\"","webpack://taysteer/external commonjs \"fastify-passport\"","webpack://taysteer/external commonjs \"fastify-secure-session\"","webpack://taysteer/external commonjs \"fs/promises\"","webpack://taysteer/external commonjs \"passport-local\"","webpack://taysteer/external commonjs \"path\"","webpack://taysteer/external commonjs \"tslib\"","webpack://taysteer/external commonjs \"typeorm\"","webpack://taysteer/external commonjs \"yamljs\"","webpack://taysteer/webpack/bootstrap","webpack://taysteer/./apps/taysteer-backend/src/main.ts"],"sourcesContent":["import { RecipeModule } from './resources/recipes/recipe.module';\r\nimport {\r\n  Module,\r\n  NestModule,\r\n  MiddlewareConsumer,\r\n  RequestMethod,\r\n} from '@nestjs/common';\r\nimport { ReqLogMiddleware } from './middleware/req.log.middleware';\r\nimport { HttpErrorFilter } from './middleware/http-exception.filter';\r\nimport { TypeOrmModule } from '@nestjs/typeorm';\r\nimport { connectionOptions } from './ormconfig';\r\nimport { UserModule } from './resources/users/user.module';\r\nimport { AuthModule } from './auth/auth.module';\r\n\r\n@Module({\r\n  imports: [\r\n    TypeOrmModule.forRoot(connectionOptions),\r\n    AuthModule,\r\n    UserModule,\r\n    RecipeModule,\r\n  ],\r\n  providers: [HttpErrorFilter],\r\n})\r\nexport class AppModule implements NestModule {\r\n  configure(consumer: MiddlewareConsumer) {\r\n    consumer.apply(ReqLogMiddleware).forRoutes({\r\n      path: '*',\r\n      method: RequestMethod.ALL,\r\n    });\r\n  }\r\n}\r\n","import { FastifyRequest } from 'fastify';\r\nimport { CookieAuthGuard } from './guards/cookie-auth.guard';\r\nimport {\r\n  Controller,\r\n  Post,\r\n  Res,\r\n  HttpStatus,\r\n  UseGuards,\r\n  ClassSerializerInterceptor,\r\n  UseInterceptors,\r\n  Req,\r\n} from '@nestjs/common';\r\nimport { Response } from 'express';\r\nimport { LocalAuthGuard } from './guards/local-auth.guard';\r\n\r\n@Controller('api')\r\n@UseInterceptors(ClassSerializerInterceptor)\r\nexport class AuthController {\r\n  @UseGuards(LocalAuthGuard)\r\n  @Post('login')\r\n  async login(@Res() res: Response) {\r\n    return res.status(HttpStatus.OK).send();\r\n  }\r\n\r\n  @UseGuards(CookieAuthGuard)\r\n  @Post('logout')\r\n  async logout(@Req() req: FastifyRequest, @Res() res: Response) {\r\n    req.logOut();\r\n    return res.status(HttpStatus.OK).send();\r\n  }\r\n}\r\n","import { AuthController } from './auth.controller';\r\nimport { LocalStrategy } from './strategies/local.strategy';\r\nimport { Module } from '@nestjs/common';\r\nimport { AuthService } from './auth.service';\r\nimport { PassportModule } from '@nestjs/passport';\r\nimport { TypeOrmModule } from '@nestjs/typeorm';\r\nimport { LocalSerializer } from './serializers/local.serializer';\r\nimport { User } from '../resources/users/user.model';\r\n\r\n@Module({\r\n  imports: [\r\n    TypeOrmModule.forFeature([User]),\r\n    PassportModule.register({\r\n      session: true,\r\n    }),\r\n  ],\r\n  providers: [AuthService, LocalStrategy, LocalSerializer],\r\n  controllers: [AuthController],\r\n})\r\nexport class AuthModule {}\r\n","import bcrypt from 'bcryptjs';\r\nimport { Injectable } from '@nestjs/common';\r\nimport { Repository } from 'typeorm';\r\nimport { User } from '../resources/users/user.model';\r\nimport { UserMinT } from '../resources/users/user.types';\r\nimport { InjectRepository } from '@nestjs/typeorm';\r\n\r\n@Injectable()\r\nexport class AuthService {\r\n  constructor(\r\n    @InjectRepository(User)\r\n    private userRepository: Repository<User>\r\n  ) {}\r\n\r\n  async validateUser(\r\n    login: string,\r\n    password: string\r\n  ): Promise<UserMinT | null> {\r\n    const user = await this.userRepository.findOne({ login }); // Find user by login\r\n    const verified = user && (await bcrypt.compare(password, user.password)); // Check password\r\n\r\n    if (verified) {\r\n      return User.toResponseMin(user);\r\n    } else return null;\r\n  }\r\n}\r\n","import {\r\n  ExecutionContext,\r\n  Injectable,\r\n  CanActivate,\r\n  UnauthorizedException,\r\n} from '@nestjs/common';\r\n\r\n@Injectable()\r\nexport class CookieAuthGuard implements CanActivate {\r\n  async canActivate(context: ExecutionContext) {\r\n    const request = context.switchToHttp().getRequest();\r\n    const authenticated = request.isAuthenticated();\r\n    if (!authenticated) throw new UnauthorizedException();\r\n    return authenticated;\r\n  }\r\n}\r\n","import { ExecutionContext, Injectable } from '@nestjs/common';\r\nimport { AuthGuard } from '@nestjs/passport';\r\n\r\n@Injectable()\r\nexport class LocalAuthGuard extends AuthGuard('local') {\r\n  async canActivate(context: ExecutionContext) {\r\n    // check the email and the password\r\n    const canActivate = await super.canActivate(context);\r\n\r\n    // initialize the session\r\n    const request = context.switchToHttp().getRequest();\r\n    super.logIn(request);\r\n\r\n    return Boolean(canActivate);\r\n  }\r\n}\r\n","import { Injectable } from '@nestjs/common';\r\nimport { User } from '../../resources/users/user.model';\r\nimport { InjectRepository } from '@nestjs/typeorm';\r\nimport { Repository } from 'typeorm';\r\nimport { PassportSerializer } from './passport.serializer';\r\n\r\n@Injectable()\r\nexport class LocalSerializer extends PassportSerializer {\r\n  constructor(\r\n    @InjectRepository(User)\r\n    private userRepository: Repository<User>\r\n  ) {\r\n    super();\r\n  }\r\n\r\n  serializeUser(user: User) {\r\n    return user.id;\r\n  }\r\n\r\n  async deserializeUser(userId: string) {\r\n    const user = await this.userRepository.findOne(userId);\r\n    return user ? user : false;\r\n  }\r\n}\r\n","import fastifyPassport from 'fastify-passport';\r\nimport { FastifyRequest } from 'fastify/types/request';\r\nimport { UserMinT } from '../../resources/users/user.types';\r\n\r\nexport abstract class PassportSerializer {\r\n  abstract serializeUser(user: UserMinT, request: FastifyRequest);\r\n  abstract deserializeUser(userId: string, request: FastifyRequest);\r\n\r\n  constructor() {\r\n    const passportInstance = this.getPassportInstance();\r\n    passportInstance.registerUserSerializer((user: UserMinT, request) =>\r\n      this.serializeUser(user, request)\r\n    );\r\n    passportInstance.registerUserDeserializer((userId: string, request) =>\r\n      this.deserializeUser(userId, request)\r\n    );\r\n  }\r\n\r\n  getPassportInstance() {\r\n    return fastifyPassport;\r\n  }\r\n}\r\n","import { Strategy } from 'passport-local';\r\nimport { PassportStrategy } from '@nestjs/passport';\r\nimport { Injectable, UnauthorizedException } from '@nestjs/common';\r\nimport { AuthService } from '../auth.service';\r\nimport { UserMinT } from '../../resources/users/user.types';\r\n\r\n@Injectable()\r\nexport class LocalStrategy extends PassportStrategy(Strategy) {\r\n  constructor(private authService: AuthService) {\r\n    super({ usernameField: 'login', passwordField: 'password' });\r\n  }\r\n\r\n  async validate(login: string, password: string): Promise<UserMinT> {\r\n    const user = await this.authService.validateUser(login, password);\r\n    if (!user) {\r\n      throw new UnauthorizedException();\r\n    }\r\n    return user;\r\n  }\r\n}\r\n","import {\r\n  ArgumentsHost,\r\n  Catch,\r\n  ExceptionFilter,\r\n  HttpException,\r\n  HttpStatus,\r\n} from '@nestjs/common';\r\nimport logger from '../utils/logger';\r\n\r\n@Catch()\r\nexport class HttpErrorFilter implements ExceptionFilter {\r\n  catch(exception: HttpException, host: ArgumentsHost) {\r\n    const context = host.switchToHttp();\r\n    const req = context.getRequest();\r\n    const res = context.getResponse();\r\n    const next = context.getNext();\r\n    const status =\r\n      exception instanceof HttpException\r\n        ? exception.getStatus()\r\n        : HttpStatus.INTERNAL_SERVER_ERROR;\r\n\r\n    const errorResponse = {\r\n      status,\r\n      timestamp: new Date().toLocaleDateString(),\r\n      path: req.url,\r\n      method: req.method,\r\n      params: req.params,\r\n      body: req.body,\r\n      message: exception.message,\r\n    };\r\n\r\n    logger.error(JSON.stringify(errorResponse));\r\n\r\n    res.status(status).send({ errorResponse });\r\n    next();\r\n  }\r\n}\r\n","import { Injectable, NestMiddleware } from '@nestjs/common';\r\nimport { Request, Response, NextFunction } from 'express';\r\nimport logger from '../utils/logger';\r\nimport { getTime } from '../utils/current.time';\r\n\r\n@Injectable()\r\nexport class ReqLogMiddleware implements NestMiddleware {\r\n  use(req: Request, res: Response, next: NextFunction) {\r\n    res.on('finish', () => {\r\n      logger.log(\r\n        `[${getTime()}]\\\r\n        Method: ${req.method};\\\r\n        Url: ${req.url};\\\r\n        Query parameters: ${JSON.stringify(req.query)};\\\r\n        Body: ${JSON.stringify(req.body)};\\\r\n        Status code: ${res.statusCode}`.replace(/\\s{2,}/g, ' ')\r\n      );\r\n    });\r\n    next();\r\n  }\r\n}\r\n","import { ConnectionOptions } from 'typeorm';\r\nimport {\r\n  POSTGRES_HOST,\r\n  POSTGRES_PORT,\r\n  POSTGRES_USER,\r\n  POSTGRES_PASSWORD,\r\n  POSTGRES_DATABASE,\r\n} from '../../../configs/common/config';\r\nimport { Recipe } from './resources/recipes/recipe.model';\r\nimport { RecipeRating } from './resources/recipes/recipe.rating.model';\r\nimport { User } from './resources/users/user.model';\r\nimport { Comment } from './resources/recipes/recipe.comment.model';\r\n\r\nexport const connectionOptions = {\r\n  type: 'postgres',\r\n  host: POSTGRES_HOST,\r\n  port: POSTGRES_PORT,\r\n  username: POSTGRES_USER,\r\n  password: POSTGRES_PASSWORD,\r\n  database: POSTGRES_DATABASE,\r\n  migrationsRun: false,\r\n  synchronize: true,\r\n  logging: false,\r\n  keepConnectionAlive: true,\r\n  autoReconnect: true,\r\n  reconnectTries: 100,\r\n  reconnectionInterval: 2000,\r\n  entities: [User, Recipe, RecipeRating, Comment],\r\n} as ConnectionOptions;\r\n","import { RecipeStringTypes } from './recipe.service.types';\r\nimport { Recipe } from './recipe.model';\r\nimport {\r\n  Entity,\r\n  PrimaryGeneratedColumn,\r\n  Column,\r\n  BaseEntity,\r\n  ManyToOne,\r\n  OneToMany,\r\n  CreateDateColumn,\r\n} from 'typeorm';\r\nimport { User } from '../users/user.model';\r\nimport { CommentToResponseT, CommentToResponseDetailedT } from './recipe.types';\r\nimport { objectPromise } from '../../utils/promise.loader';\r\n\r\n@Entity('Comment')\r\nexport class Comment extends BaseEntity {\r\n  @PrimaryGeneratedColumn()\r\n  id: number;\r\n\r\n  @Column('varchar', { length: 500 })\r\n  text: string;\r\n\r\n  @ManyToOne(() => Recipe, (recipe) => recipe.comments, { onDelete: 'CASCADE' })\r\n  recipe: Recipe;\r\n\r\n  @ManyToOne(() => User, { onDelete: 'SET NULL' })\r\n  user: User;\r\n\r\n  @OneToMany(() => Comment, (comment) => comment.mainComment)\r\n  childComments: Array<Comment>;\r\n\r\n  @ManyToOne(() => Comment, (comment) => comment.childComments, {\r\n    onDelete: 'CASCADE',\r\n  })\r\n  mainComment: Comment;\r\n\r\n  @CreateDateColumn()\r\n  date: Date;\r\n\r\n  @Column('boolean', { nullable: false, default: false })\r\n  updated: boolean;\r\n\r\n  constructor({ text = '', updated = false } = {}) {\r\n    super();\r\n    this.text = text;\r\n    this.updated = updated;\r\n  }\r\n\r\n  static async toResponse(comment: Comment): Promise<CommentToResponseT> {\r\n    const { id, text, user, date, updated } = comment;\r\n    return objectPromise({\r\n      id,\r\n      text,\r\n      user: User.toResponse(user),\r\n      date,\r\n      updated,\r\n      countOfChildComments: await this.getRepository().count({\r\n        relations: [RecipeStringTypes.MAIN_COMMENT],\r\n        where: { mainComment: comment },\r\n      }),\r\n    });\r\n  }\r\n\r\n  static async toResponseDetailed(\r\n    comment: Comment\r\n  ): Promise<CommentToResponseDetailedT> {\r\n    const { id, text, user, date, updated, childComments } = comment;\r\n    return objectPromise({\r\n      id,\r\n      text,\r\n      user: User.toResponse(user),\r\n      date,\r\n      updated,\r\n      countOfChildComments: await this.getRepository().count({\r\n        relations: [RecipeStringTypes.MAIN_COMMENT],\r\n        where: { mainComment: comment },\r\n      }),\r\n      childComments: childComments\r\n        ? await Promise.all(\r\n            childComments.map(\r\n              async (comment) => await Comment.toResponse(comment)\r\n            )\r\n          )\r\n        : null,\r\n    });\r\n  }\r\n}\r\n","import { Comment } from './recipe.comment.model';\r\nimport { RecipeCommentDto } from './recipe.dtos';\r\nimport { Recipe } from './recipe.model';\r\nimport { RecipeService } from './recipe.service';\r\nimport {\r\n  Body,\r\n  Controller,\r\n  Delete,\r\n  Get,\r\n  HttpStatus,\r\n  Param,\r\n  Post,\r\n  Put,\r\n  Query,\r\n  Req,\r\n  Res,\r\n  UseGuards,\r\n} from '@nestjs/common';\r\nimport { CookieAuthGuard } from '../../auth/guards/cookie-auth.guard';\r\nimport { ExtendedRequest } from '../../typification/interfaces';\r\nimport { Response } from 'express';\r\n\r\n@Controller('api/recipes')\r\nexport class RecipeController {\r\n  constructor(private readonly recipeService: RecipeService) {}\r\n\r\n  @Get()\r\n  async getRecipes(@Res() res: Response, @Query('page') page: number) {\r\n    const recipes = await this.recipeService.getRecipes(page);\r\n    return res\r\n      .status(HttpStatus.OK)\r\n      .send(recipes.map((recipe) => Recipe.toResponse(recipe)));\r\n  }\r\n\r\n  @Post()\r\n  @UseGuards(CookieAuthGuard)\r\n  async createRecipe(@Req() req: ExtendedRequest, @Res() res: Response) {\r\n    const createdRecipe = await this.recipeService.addRecipe(\r\n      req.parts(),\r\n      req.user.id\r\n    );\r\n    return createdRecipe\r\n      ? res.status(HttpStatus.CREATED).send(Recipe.toResponse(createdRecipe))\r\n      : res.status(HttpStatus.BAD_REQUEST).send();\r\n  }\r\n\r\n  @Get('find')\r\n  async findRecipes(\r\n    @Res() res: Response,\r\n    @Query('search') search: string,\r\n    @Query('page') page: number\r\n  ) {\r\n    const recipes = await this.recipeService.getRecipesByTitle(search, page);\r\n    return res\r\n      .status(HttpStatus.OK)\r\n      .send(recipes.map((recipe) => Recipe.toResponse(recipe)));\r\n  }\r\n\r\n  @Get(':recipeId')\r\n  async getRecipe(@Res() res: Response, @Param('recipeId') recipeId: string) {\r\n    const recipe = await this.recipeService.getRecipeById(recipeId);\r\n    return recipe\r\n      ? res.status(HttpStatus.OK).send(await Recipe.toResponseDetailed(recipe))\r\n      : res.status(HttpStatus.NOT_FOUND).send();\r\n  }\r\n\r\n  @Put(':recipeId')\r\n  @UseGuards(CookieAuthGuard)\r\n  async updateRecipe(\r\n    @Req() req: ExtendedRequest,\r\n    @Res() res: Response,\r\n    @Param('recipeId') recipeId: string\r\n  ) {\r\n    const hasRecipeAccess = await this.recipeService.hasRecipeAccess(\r\n      req.user.id,\r\n      recipeId\r\n    );\r\n    if (!hasRecipeAccess) return res.status(HttpStatus.FORBIDDEN).send();\r\n    const updatedRecipe = await this.recipeService.updateRecipe(\r\n      req.parts(),\r\n      recipeId\r\n    );\r\n    return updatedRecipe\r\n      ? res.status(HttpStatus.OK).send(Recipe.toResponse(updatedRecipe))\r\n      : res.status(HttpStatus.BAD_REQUEST).send();\r\n  }\r\n\r\n  @Delete(':recipeId')\r\n  @UseGuards(CookieAuthGuard)\r\n  async deleteRecipe(\r\n    @Req() req: ExtendedRequest,\r\n    @Res() res: Response,\r\n    @Param('recipeId') recipeId: string\r\n  ) {\r\n    const hasRecipeAccess = await this.recipeService.hasRecipeAccess(\r\n      req.user.id,\r\n      recipeId\r\n    );\r\n    if (!hasRecipeAccess) return res.status(HttpStatus.FORBIDDEN).send();\r\n    const deleted = await this.recipeService.deleteRecipe(recipeId);\r\n    return deleted\r\n      ? res.status(HttpStatus.NO_CONTENT).send()\r\n      : res.status(HttpStatus.BAD_REQUEST).send();\r\n  }\r\n\r\n  @Post(':recipeId/rate')\r\n  @UseGuards(CookieAuthGuard)\r\n  async rateRecipe(\r\n    @Req() req: ExtendedRequest,\r\n    @Res() res: Response,\r\n    @Param('recipeId') recipeId: string,\r\n    @Query('rating') rating = 0\r\n  ) {\r\n    const hasRecipeAccess = !(await this.recipeService.hasRecipeAccess(\r\n      req.user.id,\r\n      recipeId\r\n    ));\r\n    if (!hasRecipeAccess) return res.status(HttpStatus.FORBIDDEN).send();\r\n\r\n    const ratedRecipe = await this.recipeService.rateRecipe(\r\n      recipeId,\r\n      req.user.id,\r\n      Number(rating)\r\n    );\r\n    return ratedRecipe\r\n      ? res.status(HttpStatus.OK).send(Recipe.toResponse(ratedRecipe))\r\n      : res.status(HttpStatus.BAD_REQUEST).send();\r\n  }\r\n\r\n  @Get('comments/:commentId')\r\n  async getComment(\r\n    @Res() res: Response,\r\n    @Param('commentId') commentId: number,\r\n    @Query('page') page: number\r\n  ) {\r\n    const comment = await this.recipeService.getCommentWithAnswersById(\r\n      commentId,\r\n      page\r\n    );\r\n    return comment\r\n      ? res\r\n          .status(HttpStatus.OK)\r\n          .send(await Comment.toResponseDetailed(comment))\r\n      : res.status(HttpStatus.NOT_FOUND).send();\r\n  }\r\n\r\n  @Get(':recipeId/comments')\r\n  async getRecipeComments(\r\n    @Res() res: Response,\r\n    @Param('recipeId') recipeId: string,\r\n    @Query('page') page: number\r\n  ) {\r\n    const comments = await this.recipeService.getComments(recipeId, page);\r\n    return comments\r\n      ? res\r\n          .status(HttpStatus.OK)\r\n          .send(\r\n            await Promise.all(\r\n              comments.map(async (comment) => await Comment.toResponse(comment))\r\n            )\r\n          )\r\n      : res.status(HttpStatus.NOT_FOUND).send();\r\n  }\r\n\r\n  @Post(':recipeId/comments')\r\n  @UseGuards(CookieAuthGuard)\r\n  async commentRecipe(\r\n    @Req() req: ExtendedRequest,\r\n    @Res() res: Response,\r\n    @Param('recipeId') recipeId: string,\r\n    @Body() body: RecipeCommentDto\r\n  ) {\r\n    const createdComment = await this.recipeService.addRecipeComment(\r\n      body.text,\r\n      req.user.id,\r\n      recipeId\r\n    );\r\n    return createdComment\r\n      ? res\r\n          .status(HttpStatus.CREATED)\r\n          .send(await Comment.toResponse(createdComment))\r\n      : res.status(HttpStatus.BAD_REQUEST).send();\r\n  }\r\n\r\n  @Put('comments/:commentId')\r\n  @UseGuards(CookieAuthGuard)\r\n  async updateRecipeComment(\r\n    @Req() req: ExtendedRequest,\r\n    @Res() res: Response,\r\n    @Param('commentId') commentId: number,\r\n    @Body() body: RecipeCommentDto\r\n  ) {\r\n    const hasRecipeAccess = await this.recipeService.hasCommentAccess(\r\n      req.user.id,\r\n      commentId\r\n    );\r\n    if (!hasRecipeAccess) return res.status(HttpStatus.FORBIDDEN).send();\r\n    const updatedComment = await this.recipeService.updateComment(\r\n      body.text,\r\n      commentId\r\n    );\r\n    return updatedComment\r\n      ? res.status(HttpStatus.OK).send(await Comment.toResponse(updatedComment))\r\n      : res.status(HttpStatus.BAD_REQUEST).send();\r\n  }\r\n\r\n  @Delete('comments/:commentId')\r\n  @UseGuards(CookieAuthGuard)\r\n  async deleteRecipeComment(\r\n    @Req() req: ExtendedRequest,\r\n    @Res() res: Response,\r\n    @Param('commentId') commentId: number\r\n  ) {\r\n    const hasRecipeAccess = await this.recipeService.hasCommentAccess(\r\n      req.user.id,\r\n      commentId\r\n    );\r\n    if (!hasRecipeAccess) return res.status(HttpStatus.FORBIDDEN).send();\r\n    const deletedComment = await this.recipeService.deleteComment(commentId);\r\n    return deletedComment\r\n      ? res.status(HttpStatus.NO_CONTENT).send()\r\n      : res.status(HttpStatus.BAD_REQUEST).send();\r\n  }\r\n\r\n  @Post('comments/:commentId')\r\n  @UseGuards(CookieAuthGuard)\r\n  async answerRecipeComment(\r\n    @Req() req: ExtendedRequest,\r\n    @Res() res: Response,\r\n    @Param('commentId') commentId: number,\r\n    @Body() body: RecipeCommentDto\r\n  ) {\r\n    const createdComment = await this.recipeService.addCommentComment(\r\n      body.text,\r\n      req.user.id,\r\n      commentId\r\n    );\r\n    return createdComment\r\n      ? res\r\n          .status(HttpStatus.CREATED)\r\n          .send(await Comment.toResponse(createdComment))\r\n      : res.status(HttpStatus.BAD_REQUEST).send();\r\n  }\r\n}\r\n","import { User } from '../users/user.model';\r\nimport { RecipeIngredientT, RecipeStepT } from './recipe.types';\r\n\r\nexport class RecipeDataDto {\r\n  title: string;\r\n  description: string;\r\n  ingredients: RecipeIngredientT[];\r\n  steps: { [key: number]: RecipeStepT };\r\n  image: string;\r\n  user: User;\r\n}\r\n\r\nexport class RecipeCommentDto {\r\n  text: string;\r\n}\r\n","import { RecipeStringTypes } from './recipe.service.types';\r\nimport {\r\n  Entity,\r\n  PrimaryGeneratedColumn,\r\n  Column,\r\n  BaseEntity,\r\n  OneToMany,\r\n  ManyToOne,\r\n  getRepository,\r\n} from 'typeorm';\r\nimport { User } from '../users/user.model';\r\nimport { Comment } from './recipe.comment.model';\r\nimport { RecipeRating } from './recipe.rating.model';\r\nimport {\r\n  RecipeIngredientT,\r\n  RecipeStepT,\r\n  RecipeToResponseT,\r\n  RecipeToResponseDetailedT,\r\n} from './recipe.types';\r\nimport { objectPromise } from '../../utils/promise.loader';\r\n\r\n@Entity('Recipe')\r\nexport class Recipe extends BaseEntity {\r\n  @PrimaryGeneratedColumn('uuid')\r\n  id: string;\r\n\r\n  @Column('varchar', { length: 50 })\r\n  title: string;\r\n\r\n  @Column('varchar', { length: 150 })\r\n  image: string;\r\n\r\n  @Column('varchar', { length: 500 })\r\n  description: string;\r\n\r\n  @Column('json')\r\n  ingredients: Array<RecipeIngredientT>;\r\n\r\n  @Column('json')\r\n  steps: { [key: number]: RecipeStepT };\r\n\r\n  @Column('int', { width: 10 })\r\n  rating: number;\r\n\r\n  @Column('int')\r\n  ratingsCount: number;\r\n\r\n  @Column('int')\r\n  ratingsSum: number;\r\n\r\n  @OneToMany(() => RecipeRating, (rater) => rater.recipe)\r\n  raters: Array<RecipeRating>;\r\n\r\n  @ManyToOne(() => User, (user) => user.recipes)\r\n  user: User;\r\n\r\n  @OneToMany(() => Comment, (comment) => comment.recipe)\r\n  comments: Array<Comment>;\r\n\r\n  constructor({\r\n    title = '',\r\n    image = '',\r\n    description = '',\r\n    ingredients = [],\r\n    steps = {},\r\n    user = new User(),\r\n    update = false,\r\n  } = {}) {\r\n    super();\r\n    this.title = title;\r\n    this.description = description;\r\n    this.image = image;\r\n    this.ingredients = ingredients;\r\n    this.steps = steps;\r\n    this.user = user;\r\n    if (!update) {\r\n      this.rating = 0;\r\n      this.ratingsCount = 0;\r\n      this.ratingsSum = 0;\r\n    }\r\n  }\r\n\r\n  static toResponse(recipe: Recipe): RecipeToResponseT {\r\n    const { id, title, image, description, rating } = recipe;\r\n    return { id, title, image, description, rating };\r\n  }\r\n\r\n  static async toResponseDetailed(\r\n    recipe: Recipe\r\n  ): Promise<RecipeToResponseDetailedT> {\r\n    const {\r\n      id,\r\n      title,\r\n      image,\r\n      description,\r\n      rating,\r\n      ratingsCount,\r\n      user,\r\n      ingredients,\r\n      steps,\r\n    } = recipe;\r\n    return objectPromise({\r\n      id,\r\n      title,\r\n      image,\r\n      description,\r\n      rating,\r\n      ratingsCount,\r\n      user: User.toResponse(user),\r\n      ingredients,\r\n      steps,\r\n      countOfComments: await getRepository(Comment).count({\r\n        relations: [RecipeStringTypes.RECIPE],\r\n        where: { recipe: recipe },\r\n      }),\r\n    });\r\n  }\r\n}\r\n","import { UserModule } from './../users/user.module';\r\nimport { RecipeController } from './recipe.controller';\r\nimport { RecipeService } from './recipe.service';\r\nimport { RecipeRating } from './recipe.rating.model';\r\nimport { Recipe } from './recipe.model';\r\nimport { TypeOrmModule } from '@nestjs/typeorm';\r\nimport { Comment } from './recipe.comment.model';\r\nimport { Module } from '@nestjs/common';\r\n\r\n@Module({\r\n  imports: [\r\n    TypeOrmModule.forFeature([Recipe, RecipeRating, Comment]),\r\n    UserModule,\r\n  ],\r\n  providers: [RecipeService],\r\n  controllers: [RecipeController],\r\n})\r\nexport class RecipeModule {}\r\n","import { User } from './../users/user.model';\r\nimport { Recipe } from './recipe.model';\r\nimport {\r\n  Entity,\r\n  PrimaryGeneratedColumn,\r\n  Column,\r\n  BaseEntity,\r\n  ManyToOne,\r\n} from 'typeorm';\r\n\r\n@Entity('RecipeRating')\r\nexport class RecipeRating extends BaseEntity {\r\n  @PrimaryGeneratedColumn()\r\n  id: number;\r\n\r\n  @ManyToOne(() => User, { onDelete: 'CASCADE' })\r\n  rater: User;\r\n\r\n  @Column('int', { width: 5 })\r\n  rating: number;\r\n\r\n  @ManyToOne(() => Recipe, (recipe) => recipe.raters, { onDelete: 'CASCADE' })\r\n  recipe: Recipe;\r\n}\r\n","import { UsersService } from './../users/user.service';\r\nimport { Comment } from './recipe.comment.model';\r\nimport {\r\n  AddRecipeT,\r\n  GetRecipesT,\r\n  GetRecipeByIdT,\r\n  GetRecipesByTitleT,\r\n  RecipeStringTypes,\r\n  UpdateRecipeT,\r\n  ValidateRecipeDataT,\r\n  HasRecipeAccessT,\r\n  DeleteRecipeT,\r\n  AddRecipeCommentT,\r\n  ValidateCommentT,\r\n  HasCommentAccessT,\r\n  GetCommentByIdT,\r\n  DeleteCommentT,\r\n  UpdateCommentT,\r\n  AddCommentCommentT,\r\n  RateRecipeT,\r\n  GetCommentsT,\r\n  GetCommentWithAnswersByIdT,\r\n} from './recipe.service.types';\r\nimport { Recipe } from './recipe.model';\r\nimport { Injectable } from '@nestjs/common';\r\nimport { InjectRepository } from '@nestjs/typeorm';\r\nimport { Like, Repository } from 'typeorm';\r\nimport { RecipeRating } from './recipe.rating.model';\r\nimport { RecipeDataDto } from './recipe.dtos';\r\nimport { deleteImage, uploadImage } from '../../utils/image.uploader';\r\n\r\n@Injectable()\r\nexport class RecipeService {\r\n  constructor(\r\n    @InjectRepository(Recipe)\r\n    private readonly recipeRepository: Repository<Recipe>,\r\n    @InjectRepository(RecipeRating)\r\n    private readonly recipeRatingsRepository: Repository<RecipeRating>,\r\n    @InjectRepository(Comment)\r\n    private readonly recipeCommentsRepository: Repository<Comment>,\r\n    private readonly usersService: UsersService\r\n  ) {}\r\n\r\n  validateRecipeData: ValidateRecipeDataT = (recipe: RecipeDataDto) => {\r\n    if (\r\n      recipe.title.length > 50 ||\r\n      recipe.description.length > 500 ||\r\n      !recipe.image\r\n    )\r\n      return false;\r\n    for (const ingredient of recipe.ingredients) {\r\n      if (\r\n        ingredient.count > 1_000_000 ||\r\n        ingredient.count < 0 ||\r\n        ingredient.name.length > 100\r\n      )\r\n        return false;\r\n    }\r\n    for (const stepKey of Object.keys(recipe.steps)) {\r\n      const step = recipe.steps[stepKey];\r\n      if (\r\n        step.title?.length > 100 ||\r\n        step.description?.length > 500 ||\r\n        !step.image\r\n      )\r\n        return false;\r\n    }\r\n    return true;\r\n  };\r\n\r\n  validateComment: ValidateCommentT = (commentText) =>\r\n    commentText.length <= 500;\r\n\r\n  hasRecipeAccess: HasRecipeAccessT = async (userId, recipeId) => {\r\n    const userIsOwner = await this.recipeRepository.findOne(recipeId, {\r\n      relations: [RecipeStringTypes.USER],\r\n      where: {\r\n        user: {\r\n          id: userId,\r\n        },\r\n      },\r\n    });\r\n    return Boolean(userIsOwner);\r\n  };\r\n\r\n  hasCommentAccess: HasCommentAccessT = async (userId, commentId) => {\r\n    const userIsOwner = await this.recipeCommentsRepository.findOne(commentId, {\r\n      relations: [RecipeStringTypes.USER],\r\n      where: {\r\n        user: {\r\n          id: userId,\r\n        },\r\n      },\r\n    });\r\n    return Boolean(userIsOwner);\r\n  };\r\n\r\n  getRecipes: GetRecipesT = (page = 1) =>\r\n    this.recipeRepository.find({\r\n      order: { rating: 'DESC' },\r\n      skip: page ? (page - 1) * 10 : 0,\r\n      take: 10,\r\n    });\r\n\r\n  getRecipeById: GetRecipeByIdT = (id) =>\r\n    this.recipeRepository.findOne(id, {\r\n      relations: [RecipeStringTypes.USER, RecipeStringTypes.RATERS],\r\n    });\r\n\r\n  getRecipesByTitle: GetRecipesByTitleT = (title, page = 1) =>\r\n    this.recipeRepository.find({\r\n      where: { title: Like(`%${title}%`) },\r\n      order: { rating: 'DESC' },\r\n      skip: page ? (page - 1) * 10 : 0,\r\n      take: 10,\r\n    });\r\n\r\n  addRecipe: AddRecipeT = async (form, userId) => {\r\n    try {\r\n      const recipeData = new RecipeDataDto(); // Create the object for recipe data\r\n      // Add user to recipe\r\n      const user = await this.usersService.getUserById(userId);\r\n      if (!user) return false;\r\n      recipeData.user = user;\r\n\r\n      // Extract form data\r\n      for await (const part of form) {\r\n        // Insert field if it's a field\r\n        if (part['value']) {\r\n          try {\r\n            // Get steps\r\n            if (part.fieldname === 'steps') {\r\n              const newData = JSON.parse(part['value']);\r\n              for (const stepKey of Object.keys(recipeData.steps)) {\r\n                const oldStep = recipeData.steps[stepKey];\r\n                if (oldStep.image) {\r\n                  newData[stepKey].image = oldStep.image;\r\n                }\r\n              }\r\n\r\n              recipeData[part.fieldname] = newData;\r\n            } else {\r\n              // Get other data\r\n              recipeData[part.fieldname] = JSON.parse(part['value']);\r\n            }\r\n          } catch {\r\n            try {\r\n              recipeData[part.fieldname] = JSON.parse(part['value']);\r\n            } catch {\r\n              recipeData[part.fieldname] = part['value'];\r\n            }\r\n          }\r\n        }\r\n        // Upload if it's a file\r\n        else if (part.file) {\r\n          const isMainImage = part.fieldname == RecipeStringTypes.IMAGE;\r\n          const isStepImage = part.fieldname.includes(\r\n            RecipeStringTypes.STEP_IMAGE\r\n          );\r\n\r\n          // Calculate image id\r\n          let id = '1';\r\n          if (isStepImage) {\r\n            // Get image id\r\n            id = String(\r\n              Number(part.fieldname.replace(RecipeStringTypes.STEP_IMAGE, '')) -\r\n                1\r\n            );\r\n            // Check id\r\n            if (Number(id) < 0) return false;\r\n            else if (!recipeData.steps || !recipeData.steps[id]) {\r\n              if (!recipeData.steps) recipeData.steps = {};\r\n              recipeData.steps[id] = { title: '', description: '', image: '' };\r\n            }\r\n          } else if (!isMainImage) return false; // Exit if it's not supported image\r\n\r\n          // Upload image\r\n          const uploadedResponse = await uploadImage(\r\n            part.file,\r\n            RecipeStringTypes.IMAGE_FOLDER\r\n          );\r\n          // Save link\r\n          if (uploadedResponse) {\r\n            if (isMainImage) recipeData.image = uploadedResponse;\r\n            else if (isStepImage) recipeData.steps[id].image = uploadedResponse;\r\n          }\r\n        }\r\n      }\r\n\r\n      // Validate data\r\n      if (!this.validateRecipeData(recipeData)) return false;\r\n\r\n      // Create recipe\r\n      const recipe = this.recipeRepository.create(new Recipe(recipeData));\r\n\r\n      // Save recipe\r\n      return await this.recipeRepository.save(recipe);\r\n    } catch {\r\n      return false;\r\n    }\r\n  };\r\n\r\n  updateRecipe: UpdateRecipeT = async (form, recipeId) => {\r\n    try {\r\n      const recipe = await this.recipeRepository.findOne(recipeId);\r\n\r\n      // Extract form data\r\n      const recipeData = new RecipeDataDto();\r\n      for await (const part of form) {\r\n        // Insert field if it's a field\r\n        if (part['value']) {\r\n          try {\r\n            // Get steps\r\n            if (part.fieldname === 'steps') {\r\n              const newData = JSON.parse(part['value']);\r\n              for (const stepKey of Object.keys(recipeData.steps)) {\r\n                const oldStep = recipeData.steps[stepKey];\r\n                if (oldStep.image) {\r\n                  newData[stepKey].image = oldStep.image;\r\n                }\r\n              }\r\n\r\n              recipeData[part.fieldname] = newData;\r\n            } else {\r\n              // Get other data\r\n              recipeData[part.fieldname] = JSON.parse(part['value']);\r\n            }\r\n          } catch {\r\n            try {\r\n              recipeData[part.fieldname] = JSON.parse(part['value']);\r\n            } catch {\r\n              recipeData[part.fieldname] = part['value'];\r\n            }\r\n          }\r\n        }\r\n        // Upload if it's a file\r\n        else if (part.file) {\r\n          const isMainImage = part.fieldname == RecipeStringTypes.IMAGE;\r\n          const isStepImage = part.fieldname.includes(\r\n            RecipeStringTypes.STEP_IMAGE\r\n          );\r\n\r\n          // Calculate image id\r\n          let id = '1';\r\n          if (isStepImage) {\r\n            // Get image id\r\n            id = String(\r\n              Number(part.fieldname.replace(RecipeStringTypes.STEP_IMAGE, '')) -\r\n                1\r\n            );\r\n            // Check id\r\n            if (Number(id) < 0) return false;\r\n            else if (!recipeData.steps || !recipeData.steps[id]) {\r\n              if (!recipeData.steps) recipeData.steps = {};\r\n              recipeData.steps[id] = { title: '', description: '', image: '' };\r\n            }\r\n          } else if (!isMainImage) return false; // Exit if it's not supported image\r\n\r\n          // Upload image\r\n          const uploadedResponse = await uploadImage(\r\n            part.file,\r\n            RecipeStringTypes.IMAGE_FOLDER\r\n          );\r\n          // Save link\r\n          if (uploadedResponse) {\r\n            if (isMainImage) recipeData.image = uploadedResponse;\r\n            else if (isStepImage) recipeData.steps[id].image = uploadedResponse;\r\n          }\r\n        }\r\n      }\r\n\r\n      // Validate data\r\n      if (!this.validateRecipeData(recipeData)) return false;\r\n\r\n      // Delete old images from the server\r\n      const images = [\r\n        recipe.image,\r\n        ...Object.keys(recipe.steps).map((key) => recipe.steps[key].image),\r\n      ];\r\n      images.forEach((image) => deleteImage(image));\r\n\r\n      const newRecipe = new Recipe({ ...recipeData, ...{ update: true } });\r\n\r\n      // Save recipe\r\n      return await this.recipeRepository.save({\r\n        ...recipe,\r\n        ...newRecipe,\r\n      });\r\n    } catch {\r\n      return false;\r\n    }\r\n  };\r\n\r\n  deleteRecipe: DeleteRecipeT = async (id) => {\r\n    // Get the recipe\r\n    const recipe = await this.getRecipeById(id);\r\n\r\n    // Delete images\r\n    const images = [\r\n      recipe.image,\r\n      ...Object.keys(recipe.steps).map((key) => recipe.steps[key].image),\r\n    ];\r\n    images.forEach((image) => deleteImage(image));\r\n\r\n    // Delete the recipe\r\n    const deleteResult = await this.recipeRepository.delete(id);\r\n    return deleteResult.affected;\r\n  };\r\n\r\n  rateRecipe: RateRecipeT = async (recipeId, raterId, rating) => {\r\n    // Validate data\r\n    if (!rating) return false;\r\n    else if (rating > 5) rating = 5;\r\n\r\n    // Get the user with relations\r\n    const recipe = await this.getRecipeById(recipeId);\r\n    if (!recipe) return false;\r\n\r\n    const user = await this.usersService.getUserById(raterId);\r\n\r\n    // Try to find the rating\r\n    const findingResult = await this.recipeRatingsRepository.findOne(\r\n      {\r\n        rater: user,\r\n        recipe: recipe,\r\n      },\r\n      {\r\n        relations: [RecipeStringTypes.RATER, RecipeStringTypes.RECIPE],\r\n      }\r\n    );\r\n    // Create a new rater if not found\r\n    const ratingObject =\r\n      findingResult || this.recipeRatingsRepository.create(new RecipeRating());\r\n    ratingObject.rater = user;\r\n    ratingObject.rating = rating;\r\n\r\n    // Save the rater\r\n    await this.recipeRatingsRepository.save(ratingObject);\r\n\r\n    let new_ratings_count = recipe.ratingsCount,\r\n      new_ratings_sum = recipe.ratingsSum - recipe.rating + rating,\r\n      new_rating = Math.round(rating);\r\n\r\n    // If it's the first rating\r\n    // Calculate the rating\r\n    if (!findingResult) {\r\n      new_ratings_count = recipe.ratingsCount + 1;\r\n      new_ratings_sum = recipe.ratingsSum + rating;\r\n      recipe.raters.push(ratingObject);\r\n    }\r\n    // If it's the update of the rating\r\n    else {\r\n      new_rating = Math.round(new_ratings_sum / new_ratings_count);\r\n    }\r\n\r\n    // Update the user\r\n    return this.recipeRepository.save({\r\n      ...recipe,\r\n      ...{\r\n        ratingsCount: new_ratings_count,\r\n        ratingsSum: new_ratings_sum,\r\n        rating: new_rating,\r\n        raters: recipe.raters,\r\n      },\r\n    });\r\n  };\r\n\r\n  getComments: GetCommentsT = async (recipeId, page = 1) => {\r\n    const recipe = await this.getRecipeById(recipeId);\r\n    return this.recipeCommentsRepository.find({\r\n      relations: [RecipeStringTypes.RECIPE, RecipeStringTypes.USER],\r\n      where: { recipe: recipe },\r\n      order: { date: 'DESC' },\r\n      skip: page ? (page - 1) * 10 : 0,\r\n      take: 10,\r\n    });\r\n  };\r\n\r\n  getCommentById: GetCommentByIdT = (id) =>\r\n    this.recipeCommentsRepository.findOne(id, {\r\n      relations: [RecipeStringTypes.USER, RecipeStringTypes.RECIPE],\r\n    });\r\n\r\n  getCommentWithAnswersById: GetCommentWithAnswersByIdT = async (id, page) => {\r\n    const mainComment = await this.getCommentById(id); // Get main comment\r\n    // Get the page of child comments\r\n    const childComments = await this.recipeCommentsRepository.find({\r\n      where: { mainComment: mainComment },\r\n      relations: [RecipeStringTypes.MAIN_COMMENT, RecipeStringTypes.USER],\r\n      order: { date: 'ASC' },\r\n      skip: page ? (page - 1) * 3 : 0,\r\n      take: 3,\r\n    });\r\n    mainComment.childComments = childComments;\r\n    return mainComment;\r\n  };\r\n\r\n  addRecipeComment: AddRecipeCommentT = async (\r\n    commentText,\r\n    userId,\r\n    recipeId\r\n  ) => {\r\n    if (!this.validateComment(commentText)) return false; // Validate comment\r\n\r\n    // Get recipe and user\r\n    const recipe = await this.getRecipeById(recipeId);\r\n    if (!recipe) return false;\r\n    const user = await this.usersService.getUserById(userId);\r\n\r\n    // Create the comment\r\n    const comment = this.recipeCommentsRepository.create(\r\n      new Comment({ text: commentText })\r\n    );\r\n    // Set relatives\r\n    comment.user = user;\r\n    comment.recipe = recipe;\r\n\r\n    // Save the comment\r\n    return this.recipeCommentsRepository.save(comment);\r\n  };\r\n\r\n  addCommentComment: AddCommentCommentT = async (\r\n    commentText,\r\n    userId,\r\n    mainCommentId\r\n  ) => {\r\n    if (!this.validateComment(commentText)) return false; // Validate comment\r\n\r\n    // Get recipe and user\r\n    const mainComment = await this.getCommentById(mainCommentId);\r\n    if (!mainComment) return false;\r\n    const user = await this.usersService.getUserById(userId);\r\n\r\n    // Create the comment\r\n    const comment = this.recipeCommentsRepository.create(\r\n      new Comment({ text: commentText })\r\n    );\r\n    // Set relatives\r\n    comment.user = user;\r\n    comment.mainComment = mainComment;\r\n\r\n    // Save the comment\r\n    return this.recipeCommentsRepository.save(comment);\r\n  };\r\n\r\n  updateComment: UpdateCommentT = async (commentText, commentId) => {\r\n    const comment = await this.getCommentById(commentId); // Get the comment\r\n    if (!this.validateComment(commentText)) return false; // Validate\r\n    // Save\r\n    return this.recipeCommentsRepository.save({\r\n      ...comment,\r\n      ...{\r\n        text: commentText,\r\n        updated: true,\r\n      },\r\n    });\r\n  };\r\n\r\n  deleteComment: DeleteCommentT = async (commentId) => {\r\n    const deleteResult = await this.recipeCommentsRepository.delete(commentId); // Delete the comment\r\n    return deleteResult.affected; // Return a result\r\n  };\r\n}\r\n","import { MultipartFile } from 'fastify-multipart';\r\nimport { RecipeDataDto } from './recipe.dtos';\r\nimport { Recipe } from './recipe.model';\r\nimport { Comment } from './recipe.comment.model';\r\n\r\nexport type ValidateRecipeDataT = (recipe: RecipeDataDto) => boolean;\r\nexport type ValidateCommentT = (CommentText: string) => boolean;\r\nexport type HasRecipeAccessT = (userId: string, recipeId: string) => Promise<boolean>;\r\nexport type HasCommentAccessT = (userId: string, commentId: number) => Promise<boolean>;\r\nexport type GetRecipesT = (page: number) => Promise<Array<Recipe>>;\r\nexport type GetRecipeByIdT = (id: string) => Promise<Recipe>;\r\nexport type GetRecipesByTitleT = (title: string, page: number) => Promise<Array<Recipe>>;\r\nexport type AddRecipeT = (form: AsyncIterableIterator<MultipartFile>, userId: string) => Promise<Recipe | false>;\r\nexport type UpdateRecipeT = (form: AsyncIterableIterator<MultipartFile>, recipeId: string) => Promise<Recipe | false>;\r\nexport type DeleteRecipeT = (id: string) => Promise<number>;\r\nexport type RateRecipeT = (recipeId: string, raterId: string, rating: number) => Promise<Recipe | false>;\r\nexport type GetCommentsT = (recipeId: string, page: number) => Promise<Array<Comment>>;\r\nexport type GetCommentByIdT = (commentId: number) => Promise<Comment>;\r\nexport type GetCommentWithAnswersByIdT = (commentId: number, page: number) => Promise<Comment>;\r\nexport type AddRecipeCommentT = (commentText: string, userId: string, recipeId: string) => Promise<Comment | false>;\r\nexport type AddCommentCommentT = (commentText: string, userId: string, mainCommentId: number) => Promise<Comment | false>;\r\nexport type UpdateCommentT = (commentText: string, commentId: number) => Promise<Comment | false>;\r\nexport type DeleteCommentT = (commentId: number) => Promise<number>;\r\n\r\nexport enum RecipeStringTypes {\r\n  IMAGE = 'image',\r\n  STEP_IMAGE = 'stepImage',\r\n  IMAGE_FOLDER = 'recipe_images',\r\n  NOT_FOUND = 'not_found',\r\n  USER = 'user',\r\n  RATER = 'rater',\r\n  RATERS = 'raters',\r\n  RECIPE = 'recipe',\r\n  COMMENTS = 'comments',\r\n  CHILD_COMMENTS = 'childComments',\r\n  MAIN_COMMENT = 'mainComment'\r\n}\r\n","import { Recipe } from './../recipes/recipe.model';\r\nimport {\r\n  Controller,\r\n  Req,\r\n  Res,\r\n  Get,\r\n  Post,\r\n  Put,\r\n  Delete,\r\n  Param,\r\n  HttpStatus,\r\n  UseGuards,\r\n  Query,\r\n} from '@nestjs/common';\r\nimport { Response } from 'express';\r\nimport { UsersService } from './user.service';\r\nimport { User } from './user.model';\r\nimport { ExtendedRequest } from '../../typification/interfaces';\r\nimport { UserStringTypes } from './user.service.types';\r\nimport { CookieAuthGuard } from '../../auth/guards/cookie-auth.guard';\r\n\r\n@Controller('api/users')\r\nexport class UsersController {\r\n  constructor(private readonly usersService: UsersService) {}\r\n\r\n  @Get(':id')\r\n  async getUserById(@Res() res: Response, @Param('id') id: string) {\r\n    const user = await this.usersService.getUserById(id);\r\n    return user\r\n      ? res.status(HttpStatus.OK).send(await User.toResponseDetailed(user))\r\n      : res.status(HttpStatus.NOT_FOUND).send();\r\n  }\r\n\r\n  @Get('me')\r\n  @UseGuards(CookieAuthGuard)\r\n  async getMe(\r\n    @Req() req: ExtendedRequest,\r\n    @Res() res: Response,\r\n    @Query('detailed') detailed = 'false'\r\n  ) {\r\n    const user = await this.usersService.getUserById(req.user.id);\r\n    const response =\r\n      detailed === 'true'\r\n        ? await User.toResponseDetailed(user)\r\n        : await User.toResponse(user);\r\n    return res.status(HttpStatus.OK).send(response);\r\n  }\r\n\r\n  @Post()\r\n  async createUser(@Req() req: ExtendedRequest, @Res() res: Response) {\r\n    // Create an account\r\n    const createdUser = await this.usersService.addUser(req.parts());\r\n\r\n    if (createdUser == UserStringTypes.CONFLICT)\r\n      return res.status(HttpStatus.CONFLICT).send(); // Response if user already exist\r\n\r\n    return createdUser && typeof createdUser != 'string'\r\n      ? res.status(HttpStatus.CREATED).send(await User.toResponse(createdUser))\r\n      : res.status(HttpStatus.BAD_REQUEST).send();\r\n  }\r\n\r\n  @Put()\r\n  @UseGuards(CookieAuthGuard)\r\n  async updateUserById(\r\n    @Req() req: ExtendedRequest,\r\n    @Res() res: Response,\r\n    @Query('user_id') userId: string\r\n  ) {\r\n    // Check access to an account\r\n    const hasAccess = await this.usersService.checkAccess(\r\n      req.user,\r\n      userId || req.user.id,\r\n      true\r\n    );\r\n    if (!hasAccess) return res.status(HttpStatus.FORBIDDEN).send();\r\n\r\n    // Update the account\r\n    const updatedUser = await this.usersService.updateUser(\r\n      userId || req.user.id,\r\n      req.parts()\r\n    );\r\n\r\n    if (updatedUser === UserStringTypes.CONFLICT)\r\n      return res.status(HttpStatus.CONFLICT).send(); // Response if user with new login already exist\r\n\r\n    return updatedUser && typeof updatedUser != 'string'\r\n      ? res.status(HttpStatus.OK).send(await User.toResponse(updatedUser))\r\n      : res.status(HttpStatus.BAD_REQUEST).send();\r\n  }\r\n\r\n  @Delete()\r\n  @UseGuards(CookieAuthGuard)\r\n  async deleteUserById(\r\n    @Req() req: ExtendedRequest,\r\n    @Res() res: Response,\r\n    @Query('user_id') userId: string\r\n  ) {\r\n    const hasAccess = await this.usersService.checkAccess(\r\n      req.user,\r\n      userId || req.user.id,\r\n      true\r\n    );\r\n    if (!hasAccess) return res.status(HttpStatus.FORBIDDEN).send();\r\n    // Delete user\r\n    const userDeleted = await this.usersService.deleteUser(\r\n      userId || req.user.id\r\n    );\r\n    return userDeleted\r\n      ? res.status(HttpStatus.NO_CONTENT).send()\r\n      : res.status(HttpStatus.BAD_REQUEST).send();\r\n  }\r\n\r\n  @Get('rating')\r\n  async getUsersByRating(@Res() res: Response, @Query('page') page: number) {\r\n    const users = await this.usersService.getUsersByRating(page);\r\n    const usersToResponse = users.map(\r\n      async (user) => await User.toResponse(user)\r\n    );\r\n    return res.status(HttpStatus.OK).send(await Promise.all(usersToResponse));\r\n  }\r\n\r\n  @Delete('delete_image')\r\n  @UseGuards(CookieAuthGuard)\r\n  async deleteProfileImage(@Req() req: ExtendedRequest, @Res() res: Response) {\r\n    const hasAccess = await this.usersService.checkAccess(\r\n      req.user,\r\n      req.user.id,\r\n      true\r\n    );\r\n    if (!hasAccess) return res.status(HttpStatus.FORBIDDEN).send();\r\n\r\n    const userExists = await this.usersService.getUserById(req.user.id);\r\n    if (!userExists) return res.status(HttpStatus.NOT_FOUND).send();\r\n\r\n    const userWithDeletedImage = await this.usersService.deleteUserImage(\r\n      req.user.id\r\n    );\r\n    return userWithDeletedImage\r\n      ? res\r\n          .status(HttpStatus.OK)\r\n          .send(await User.toResponse(userWithDeletedImage))\r\n      : res.status(HttpStatus.BAD_REQUEST).send();\r\n  }\r\n\r\n  @Get(':id/recipes')\r\n  async getUserRecipes(\r\n    @Res() res: Response,\r\n    @Param('id') id: string,\r\n    @Query('page') page: number\r\n  ) {\r\n    const recipes = await this.usersService.getUserRecipes(id, page);\r\n    const toResponse = recipes.map((recipe) => Recipe.toResponse(recipe));\r\n    return res.status(HttpStatus.OK).send(toResponse);\r\n  }\r\n}\r\n","export class UserDataDto {\r\n  id?: string;\r\n  name?: string;\r\n  login?: string;\r\n  password?: string;\r\n  description?: string;\r\n  image?: string;\r\n}\r\n","import { UserStringTypes } from './user.service.types';\r\nimport { Recipe } from './../recipes/recipe.model';\r\nimport {\r\n  UserMinT,\r\n  UserToResponseT,\r\n  UserToResponseDetailedT,\r\n} from './user.types';\r\nimport {\r\n  Entity,\r\n  PrimaryGeneratedColumn,\r\n  Column,\r\n  BaseEntity,\r\n  OneToMany,\r\n  getRepository,\r\n} from 'typeorm';\r\n\r\n@Entity('User')\r\nexport class User extends BaseEntity {\r\n  @PrimaryGeneratedColumn('uuid')\r\n  id: string;\r\n\r\n  @Column('varchar', { length: 50 })\r\n  name: string;\r\n\r\n  @Column('varchar', { length: 50 })\r\n  login: string;\r\n\r\n  @Column('varchar', { length: 60 })\r\n  password: string;\r\n\r\n  @Column('varchar', { length: 150 })\r\n  image: string;\r\n\r\n  @Column('varchar', { length: 500 })\r\n  description: string;\r\n\r\n  @Column('int', { width: 10 })\r\n  rating: number;\r\n\r\n  @OneToMany(() => Recipe, (recipe) => recipe.user)\r\n  recipes: Recipe[];\r\n\r\n  constructor({\r\n    name = '',\r\n    login = '',\r\n    password = '',\r\n    description = '',\r\n    image = '',\r\n  } = {}) {\r\n    super();\r\n    this.name = name;\r\n    this.login = login;\r\n    this.password = password;\r\n    this.description = description;\r\n    this.image = image;\r\n    this.rating = 0;\r\n  }\r\n\r\n  static async calculateRating(user: User): Promise<number> {\r\n    return (\r\n      await getRepository(Recipe).find({\r\n        relations: [UserStringTypes.USER],\r\n        where: { user: user },\r\n      })\r\n    ).filter((recipe) => {\r\n      return recipe.rating > 0;\r\n    }).reduce((accumulated, recipe, index) => {\r\n      return (accumulated * index + recipe.rating) / (index + 1);\r\n    }, 0);\r\n  }\r\n\r\n  static async toResponse(user: User): Promise<UserToResponseT> {\r\n    const rating = await User.calculateRating(user);\r\n    const { id, name, login, image } = user;\r\n    return { id, name, login, image, rating } as User;\r\n  }\r\n\r\n  static async toResponseDetailed(\r\n    user: User\r\n  ): Promise<UserToResponseDetailedT> {\r\n    const rating = await User.calculateRating(user);\r\n    const countOfRecipes = await getRepository(Recipe).count({\r\n      relations: [UserStringTypes.USER],\r\n      where: { user: user },\r\n    });\r\n    const { id, name, login, image, description } = user;\r\n    return {\r\n      id,\r\n      name,\r\n      login,\r\n      image,\r\n      rating,\r\n      description,\r\n      countOfRecipes,\r\n    };\r\n  }\r\n\r\n  static toResponseMin(user: User): UserMinT {\r\n    const { id, login } = user;\r\n    return { id, login } as User;\r\n  }\r\n}\r\n","import { Recipe } from './../recipes/recipe.model';\r\nimport { Module } from '@nestjs/common';\r\nimport { UsersService } from './user.service';\r\nimport { UsersController } from './user.controller';\r\nimport { TypeOrmModule } from '@nestjs/typeorm';\r\nimport { User } from './user.model';\r\n\r\n@Module({\r\n  imports: [TypeOrmModule.forFeature([User, Recipe])],\r\n  providers: [UsersService],\r\n  controllers: [UsersController],\r\n  exports: [UsersService],\r\n})\r\nexport class UserModule {}\r\n","import { Recipe } from './../recipes/recipe.model';\r\nimport { UserDataDto } from './user.dto';\r\nimport {\r\n  CreateAdminT,\r\n  GetByIdT,\r\n  GetByLoginT,\r\n  AddUserT,\r\n  UpdateUserT,\r\n  DeleteUserT,\r\n  GetUsersByRatingT,\r\n  CheckAccessT,\r\n  ValidateUserDataT,\r\n  UserStringTypes,\r\n  DeleteUserImageT,\r\n  GetUserRecipesT,\r\n} from './user.service.types';\r\nimport { User } from './user.model';\r\nimport { Injectable } from '@nestjs/common';\r\nimport { InjectRepository } from '@nestjs/typeorm';\r\nimport { Repository } from 'typeorm';\r\nimport bcrypt from 'bcryptjs';\r\nimport {\r\n  ADMIN_LOGIN,\r\n  ADMIN_PASSWORD,\r\n} from '../../../../../configs/common/config';\r\nimport { deleteImage, uploadImage } from '../../utils/image.uploader';\r\n\r\n@Injectable()\r\nexport class UsersService {\r\n  constructor(\r\n    @InjectRepository(User)\r\n    private readonly userRepository: Repository<User>,\r\n    @InjectRepository(Recipe)\r\n    private readonly recipeRepository: Repository<Recipe>\r\n  ) {\r\n    this.createAdmin();\r\n  }\r\n\r\n  createAdmin: CreateAdminT = async () => {\r\n    const adminExists = await this.userRepository.findOne({\r\n      login: ADMIN_LOGIN,\r\n    });\r\n    if (!adminExists) {\r\n      const admin = new User({ login: ADMIN_LOGIN, password: ADMIN_PASSWORD });\r\n      this.userRepository.save({\r\n        ...admin,\r\n        ...{\r\n          password: await bcrypt.hash(ADMIN_PASSWORD, bcrypt.genSaltSync(10)),\r\n        },\r\n      });\r\n    }\r\n  };\r\n\r\n  checkAccess: CheckAccessT = async (\r\n    user,\r\n    requestedId,\r\n    shouldBeOwner = true\r\n  ) => {\r\n    const userExists = await this.getUserById(requestedId);\r\n    const isOwner = user.id == requestedId;\r\n    const isAdmin = user.id == (await this.getUserByLogin(ADMIN_LOGIN)).id;\r\n    return userExists && (isOwner == shouldBeOwner || isAdmin);\r\n  };\r\n\r\n  validateUserData: ValidateUserDataT = async (userData, updating = false) => {\r\n    if (!updating) {\r\n      // If it's a data for creating a new user\r\n      if (!userData.password) return false; // Check if the login and password exists\r\n    }\r\n    if (\r\n      // Check if the data is valid\r\n      userData.name?.length > 50 ||\r\n      userData.login?.length > 50 ||\r\n      userData.password?.length > 50 ||\r\n      userData.description?.length > 500\r\n    )\r\n      return false;\r\n    return true;\r\n  };\r\n\r\n  getUserById: GetByIdT = (id) => this.userRepository.findOne(id);\r\n\r\n  getUserByLogin: GetByLoginT = (login) =>\r\n    this.userRepository.findOne({ login: login });\r\n\r\n  addUser: AddUserT = async (form) => {\r\n    const userData = new UserDataDto(); // Create the object for user data\r\n\r\n    // Extract form data\r\n    for await (const part of form) {\r\n      // Insert field if it's a field\r\n      if (part['value']) userData[part.fieldname] = part['value'];\r\n      // Upload if it's a file\r\n      else if (part.file) {\r\n        // Upload image\r\n        const uploadedResponse = await uploadImage(\r\n          part.file,\r\n          UserStringTypes.IMAGES_FOLDER\r\n        );\r\n        if (uploadedResponse) userData.image = uploadedResponse;\r\n        break;\r\n      }\r\n    }\r\n\r\n    if (await this.getUserByLogin(userData.login))\r\n      return UserStringTypes.CONFLICT; // Check if the user does not exist\r\n    if (!(await this.validateUserData(userData, false))) return false; // Validate data\r\n\r\n    const user = this.userRepository.create(new User(userData)); // Create user object\r\n\r\n    // Save user with password hash\r\n    return this.userRepository.save({\r\n      ...user,\r\n      ...{ password: await bcrypt.hash(user.password, bcrypt.genSaltSync(10)) },\r\n    });\r\n  };\r\n\r\n  updateUser: UpdateUserT = async (id, form) => {\r\n    const user = await this.getUserById(id); // Get user\r\n\r\n    const userData = new UserDataDto();\r\n    // Extract form data\r\n    for await (const part of form) {\r\n      // If it's a field\r\n      if (part['value']) userData[part.fieldname] = part['value'];\r\n      // If it's a file\r\n      else if (part.file) {\r\n        // Upload image\r\n        const uploadedResponse = await uploadImage(\r\n          part.file,\r\n          UserStringTypes.IMAGES_FOLDER\r\n        );\r\n        if (uploadedResponse) userData.image = uploadedResponse;\r\n        break;\r\n      }\r\n    }\r\n\r\n    // Check if the user with the same login does not exist\r\n    if (\r\n      userData.login !== user.login &&\r\n      (await this.getUserByLogin(userData.login))\r\n    )\r\n      return UserStringTypes.CONFLICT;\r\n    if (!(await this.validateUserData(userData, true))) return false; // Validate data\r\n\r\n    // Delete old image from the server\r\n    if (userData.image && user.image) {\r\n      deleteImage(user.image);\r\n    }\r\n\r\n    // Create the user object with the new data\r\n    const newUser = new User({\r\n      ...userData,\r\n      ...{ login: userData.login || user.login, update: true },\r\n    });\r\n\r\n    // Update the user\r\n    return this.userRepository.save({\r\n      ...user,\r\n      ...{\r\n        ...newUser,\r\n        ...{\r\n          password: newUser.password // Set a hash of the password\r\n            ? await bcrypt.hash(newUser.password, bcrypt.genSaltSync(10))\r\n            : user.password,\r\n        },\r\n      },\r\n    });\r\n  };\r\n\r\n  deleteUser: DeleteUserT = async (id) => {\r\n    const user = await this.getUserById(id);\r\n    deleteImage(user.image); // Delete the image\r\n    const deleteResult = await this.userRepository.delete(id); // Delete the user\r\n    return deleteResult.affected; // Return a result\r\n  };\r\n\r\n  getUsersByRating: GetUsersByRatingT = async (page = 1) => {\r\n    // Find users by rating in descending order\r\n    const users = await this.userRepository.find({\r\n      order: { rating: 'DESC' },\r\n      skip: page ? (page - 1) * 10 : 0,\r\n      take: 10,\r\n    });\r\n    return users;\r\n  };\r\n\r\n  deleteUserImage: DeleteUserImageT = async (userId) => {\r\n    const user = await this.getUserById(userId);\r\n    const deleted = await deleteImage(user.image);\r\n    if (deleted) {\r\n      return this.userRepository.save({ ...user, ...{ image: '' } });\r\n    } else return false;\r\n  };\r\n\r\n  getUserRecipes: GetUserRecipesT = async (userId, page = 1) => {\r\n    const user = await this.getUserById(userId);\r\n    return await this.recipeRepository.find({\r\n      relations: [UserStringTypes.USER],\r\n      where: { user: user },\r\n      order: { rating: 'DESC' },\r\n      skip: page ? (page - 1) * 10 : 0,\r\n      take: 10,\r\n    });\r\n  };\r\n}\r\n","import { Recipe } from './../recipes/recipe.model';\r\nimport { UserDataDto } from './user.dto';\r\nimport { UserMinT } from './user.types';\r\nimport { MultipartFile } from 'fastify-multipart';\r\nimport { User } from './user.model';\r\n\r\nexport type CreateAdminT = () => void;\r\nexport type CheckAccessT = (user: UserMinT, requestedId: string, shouldBeOwner: boolean) => Promise<boolean>;\r\nexport type ValidateUserDataT = (userData: UserDataDto | User, updating: boolean) => Promise<boolean>;\r\nexport type GetByIdT = (id: string) => Promise<User | undefined>;\r\nexport type GetByLoginT = (login: string) => Promise<User | undefined>;\r\nexport type AddUserT = (data: AsyncIterableIterator<MultipartFile>) => Promise<User | false | string>;\r\nexport type UpdateUserT = (id: string, data: AsyncIterableIterator<MultipartFile>) => Promise<User | false | string>;\r\nexport type DeleteUserT = (id: string) => Promise<number>;\r\nexport type GetUsersByRatingT = (page: number) => Promise<Array<User>>;\r\nexport type DeleteUserImageT = (userId: string) => Promise<User | false>;\r\nexport type GetUserRecipesT = (userId: string, page: number) => Promise<Array<Recipe>>;\r\n\r\nexport enum UserStringTypes {\r\n  IMAGE = 'image',\r\n  CONFLICT = 'conflict',\r\n  IMAGES_FOLDER = 'user_avatar',\r\n  RECIPES = 'recipes',\r\n  USER = 'user',\r\n  RATING = 'rating',\r\n}\r\n","import { FastifyRequest } from 'fastify';\r\n\r\nexport interface ExtendedRequest extends FastifyRequest {\r\n  user: {\r\n    id: string;\r\n    login: string;\r\n  };\r\n}\r\n","export const getTime = (): string => {\r\n  const date_ob = new Date();\r\n\r\n  // Adjust 0 before single digit date\r\n  const date = ('0' + date_ob.getDate()).slice(-2);\r\n\r\n  // Current month\r\n  const month = ('0' + (date_ob.getMonth() + 1)).slice(-2);\r\n\r\n  // Current year\r\n  const year = date_ob.getFullYear();\r\n\r\n  // Current hours\r\n  const hours = date_ob.getHours();\r\n\r\n  // Current minutes\r\n  const minutes = date_ob.getMinutes();\r\n\r\n  // Current seconds\r\n  const seconds = date_ob.getSeconds();\r\n\r\n  // Date & time in YYYY-MM-DD HH:MM:SS format\r\n  const dateTime =\r\n    year +\r\n    '-' +\r\n    month +\r\n    '-' +\r\n    date +\r\n    ' ' +\r\n    hours +\r\n    ':' +\r\n    minutes +\r\n    ':' +\r\n    seconds;\r\n\r\n  return dateTime;\r\n};\r\n","import { cloudinary } from '../../../../configs/utils/cloudinary';\r\nimport { PromiseController } from './promise.controller';\r\nimport { deleteImageT, uploadImageT } from './util.types';\r\n\r\nconst uploadImage: uploadImageT = async (fileReadStream, folder) => {\r\n  const promiseController = new PromiseController(); // Create a new promise controller\r\n  // Create upload stream\r\n  const uploadStream = cloudinary.uploader.upload_stream(\r\n    { folder: folder },\r\n    (error, result) => {\r\n      if (!error) {\r\n        promiseController.resolve(result.url); // Return a response using the promise\r\n      } else promiseController.resolve(false);\r\n    }\r\n  );\r\n  fileReadStream.pipe(uploadStream); // Connect the file read stream\r\n\r\n  const uploadedResponse = await promiseController.promise; // Get a response\r\n  return uploadedResponse;\r\n};\r\n\r\nconst deleteImage: deleteImageT = async (link) => {\r\n  const public_id = link.match(/(?<!\\/\\/)(?<=\\/)\\w+(?=\\.)/)[0];\r\n  const folder = link.match(/(?<=[0-9]\\W).+(?=\\W\\w+\\.\\w+)/)[0];\r\n  // Delete an old image\r\n  const response = await cloudinary.uploader.destroy(`${folder}/${public_id}`);\r\n\r\n  return response.result == 'ok';\r\n};\r\n\r\nexport { uploadImage, deleteImage };\r\n","import fs from 'fs/promises';\r\n\r\n// Write log to the file\r\nconst log = (message: string, consoleLog = false): void => {\r\n  if (consoleLog) console.log(message);\r\n  fs.appendFile('./logs/logs.txt', `${message}\\n`);\r\n};\r\n\r\n// Write error log to the file and console\r\nconst error = (error: string): void => {\r\n  console.error(error);\r\n  fs.appendFile('./logs/errors.txt', `${error}\\n`);\r\n};\r\n\r\nexport = { log, error };\r\n","/* eslint-disable @typescript-eslint/no-explicit-any */\r\n\r\n// Allows to return values from callback functions\r\n// Usage:\r\n// const promiseController = new PromiseController();\r\n// fcn((callbackData) => {return promiseController.resolve(callbackData);})\r\n// return promiseController.promise;\r\nexport class PromiseController {\r\n  constructor() {\r\n    this.promise = new Promise((resolve, reject) => {\r\n      this.resolve = resolve;\r\n      this.reject = reject;\r\n    });\r\n  }\r\n  promise: Promise<any>;\r\n  resolve: (reason?: any) => void = () => null;\r\n  reject: (value: any) => void = () => null;\r\n}\r\n","/* eslint-disable @typescript-eslint/no-explicit-any */\r\nconst objectZip = (keys: any, values: any) =>\r\n  keys.reduce(\r\n    (others: any, key: any, index: any) => ({\r\n      ...others,\r\n      [key]: values[index],\r\n    }),\r\n    {}\r\n  );\r\n\r\nexport const objectPromise = async (obj: any) =>\r\n  objectZip(Object.keys(obj), await Promise.all(Object.values(obj)));\r\n","export const HOST_BACKEND = process.env['HOST_BACKEND'] || 'localhost';\r\nexport const HOST_FRONTEND = process.env['HOST_FRONTEND'] || 'localhost';\r\nexport const PORT_BACKEND = process.env['PORT_BACKEND'] || 4000;\r\nexport const PORT_FRONTEND = process.env['PORT_FRONTEND'] || 3000;\r\nexport const SESSION_SECRET_KEY = process.env['SESSION_SECRET_KEY'];\r\nexport const SESSION_SECRET_SALT = process.env['SESSION_SECRET_SALT'];\r\nexport const POSTGRES_HOST = process.env['POSTGRES_HOST'];\r\nexport const POSTGRES_PORT = Number(process.env['POSTGRES_PORT']);\r\nexport const POSTGRES_USER = process.env['POSTGRES_USER'];\r\nexport const POSTGRES_PASSWORD = process.env['POSTGRES_PASSWORD'];\r\nexport const POSTGRES_DATABASE = process.env['POSTGRES_DB'];\r\nexport const CLOUDINARY_CLOUD_NAME = process.env['CLOUDINARY_CLOUD_NAME'];\r\nexport const CLOUDINARY_API_KEY = process.env['CLOUDINARY_API_KEY'];\r\nexport const CLOUDINARY_API_SECRET = process.env['CLOUDINARY_API_SECRET'];\r\nexport const ADMIN_LOGIN = process.env['ADMIN_LOGIN'];\r\nexport const ADMIN_PASSWORD = process.env['ADMIN_PASSWORD'];\r\n","import {\r\n  CLOUDINARY_CLOUD_NAME,\r\n  CLOUDINARY_API_KEY,\r\n  CLOUDINARY_API_SECRET,\r\n} from '../common/config';\r\nimport { v2 as cloudinary } from 'cloudinary';\r\n\r\ncloudinary.config({\r\n  cloud_name: CLOUDINARY_CLOUD_NAME,\r\n  api_key: CLOUDINARY_API_KEY,\r\n  api_secret: CLOUDINARY_API_SECRET,\r\n});\r\n\r\nexport { cloudinary };\r\n","module.exports = require(\"@nestjs/common\");","module.exports = require(\"@nestjs/core\");","module.exports = require(\"@nestjs/passport\");","module.exports = require(\"@nestjs/platform-fastify\");","module.exports = require(\"@nestjs/swagger\");","module.exports = require(\"@nestjs/typeorm\");","module.exports = require(\"bcryptjs\");","module.exports = require(\"cloudinary\");","module.exports = require(\"express\");","module.exports = require(\"fastify\");","module.exports = require(\"fastify-multipart\");","module.exports = require(\"fastify-passport\");","module.exports = require(\"fastify-secure-session\");","module.exports = require(\"fs/promises\");","module.exports = require(\"passport-local\");","module.exports = require(\"path\");","module.exports = require(\"tslib\");","module.exports = require(\"typeorm\");","module.exports = require(\"yamljs\");","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","import { NestFactory } from '@nestjs/core';\r\nimport { AppModule } from './app.module';\r\nimport {\r\n  SESSION_SECRET_KEY,\r\n  PORT_BACKEND,\r\n  SESSION_SECRET_SALT,\r\n  PORT_FRONTEND,\r\n} from '../../../configs/common/config';\r\nimport {\r\n  FastifyAdapter,\r\n  NestFastifyApplication,\r\n} from '@nestjs/platform-fastify';\r\nimport path from 'path';\r\nimport YAML from 'yamljs';\r\nimport { SwaggerModule } from '@nestjs/swagger';\r\nimport secureSession from 'fastify-secure-session';\r\nimport fastifyPassport from 'fastify-passport';\r\nimport fastifyMultiPart from 'fastify-multipart';\r\n\r\nasync function bootstrap() {\r\n  const app = await NestFactory.create<NestFastifyApplication>(\r\n    AppModule,\r\n    new FastifyAdapter(),\r\n    {\r\n      cors: {\r\n        origin: `http://localhost:${PORT_FRONTEND}`,\r\n        credentials: true,\r\n      },\r\n      logger: ['error', 'warn'],\r\n    }\r\n  );\r\n\r\n  app.register(secureSession, {\r\n    secret: SESSION_SECRET_KEY,\r\n    salt: SESSION_SECRET_SALT,\r\n    cookie: {\r\n      maxAge: 60 * 60 * 24 * 30, // 30 days\r\n    },\r\n  });\r\n  app.register(fastifyPassport.initialize());\r\n  app.register(fastifyPassport.secureSession());\r\n  app.register(fastifyMultiPart);\r\n\r\n  const swaggerDocument = YAML.load(\r\n    path.join(__dirname, '../../../apps/taysteer-backend/doc/api.yaml')\r\n  );\r\n  SwaggerModule.setup('doc', app, swaggerDocument);\r\n\r\n  app.listen(PORT_BACKEND, '0.0.0.0', () => {\r\n    console.log(`Service is running at http://localhost:${PORT_BACKEND}`);\r\n  });\r\n}\r\nbootstrap();\r\n"],"names":[],"sourceRoot":""}